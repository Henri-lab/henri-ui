// 对于 TypeScript 项目，通常会使用 tsconfig.json 文件来配置 TypeScript 编译器的行为。有时候，为了在多个项目中共享通用的 TypeScript 配置，可以使用 tsconfig.base.json 文件作为基础配置，然后在具体项目中继承或扩展该配置
{
  "compilerOptions": {
    "target": "es6" /* 编译后的 JavaScript 目标版本 为 ES6*/,
    "module": "esnext" /* 指定生成的模块系统代码 */,
    "strict": true /* 启用所有严格类型检查选项 */,
    "esModuleInterop": true /* 允许使用 CommonJS 模块语法 */,
    "sourceMap": true /* 生成 Sourcemap 文件，用于调试 */,
    "outDir": "./dist" /* 输出目录 */,
    // 简化模块引入
    "baseUrl": "./src" /* 解析非相对模块名的基本目录 即 直接使用模块名来导入模块*/,
    "paths": {
      "@/*": ["*"] /* 路径映射，用于模块解析 */
    }
  },
  "include": [
    "src/**/*" /* 需要编译的 TypeScript 文件的目录 为 src文件夹下所有文件*/
  ],
  "exclude": ["node_modules" /* 不包括编译的目录或文件 */],

  "moduleResolution": "nodenext", //ES6 模块解析
  "paths": {
    "@vueuse/core": ["node_modules/@vueuse/core"] //ts编译器查找时会找到对应的映射地址
  }
}
